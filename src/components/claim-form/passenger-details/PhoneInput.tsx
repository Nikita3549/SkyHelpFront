import React, { useEffect, useState } from 'react';
import { Check, ChevronDown, Phone, Search } from 'lucide-react';
import { countries, CountryOption } from '@/lib/countries';
import { cn } from '@/lib/utils';
import { useIsMobile } from '@/hooks/use-mobile';

import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
} from '@/components/ui/command';

import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from '@/components/ui/popover';

import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';

// Add dial codes to countries
const countriesWithDialCodes: (CountryOption & { dialCode: string })[] = [
  { label: 'Afghanistan', value: 'AF', flag: 'ğŸ‡¦ğŸ‡«', dialCode: '+93' },
  { label: 'Albania', value: 'AL', flag: 'ğŸ‡¦ğŸ‡±', dialCode: '+355' },
  { label: 'Algeria', value: 'DZ', flag: 'ğŸ‡©ğŸ‡¿', dialCode: '+213' },
  { label: 'Andorra', value: 'AD', flag: 'ğŸ‡¦ğŸ‡©', dialCode: '+376' },
  { label: 'Angola', value: 'AO', flag: 'ğŸ‡¦ğŸ‡´', dialCode: '+244' },
  { label: 'Antigua and Barbuda', value: 'AG', flag: 'ğŸ‡¦ğŸ‡¬', dialCode: '+1' },
  { label: 'Argentina', value: 'AR', flag: 'ğŸ‡¦ğŸ‡·', dialCode: '+54' },
  { label: 'Armenia', value: 'AM', flag: 'ğŸ‡¦ğŸ‡²', dialCode: '+374' },
  { label: 'Australia', value: 'AU', flag: 'ğŸ‡¦ğŸ‡º', dialCode: '+61' },
  { label: 'Austria', value: 'AT', flag: 'ğŸ‡¦ğŸ‡¹', dialCode: '+43' },
  { label: 'Azerbaijan', value: 'AZ', flag: 'ğŸ‡¦ğŸ‡¿', dialCode: '+994' },
  { label: 'Bahamas', value: 'BS', flag: 'ğŸ‡§ğŸ‡¸', dialCode: '+1' },
  { label: 'Bahrain', value: 'BH', flag: 'ğŸ‡§ğŸ‡­', dialCode: '+973' },
  { label: 'Bangladesh', value: 'BD', flag: 'ğŸ‡§ğŸ‡©', dialCode: '+880' },
  { label: 'Barbados', value: 'BB', flag: 'ğŸ‡§ğŸ‡§', dialCode: '+1' },
  { label: 'Belarus', value: 'BY', flag: 'ğŸ‡§ğŸ‡¾', dialCode: '+375' },
  { label: 'Belgium', value: 'BE', flag: 'ğŸ‡§ğŸ‡ª', dialCode: '+32' },
  { label: 'Belize', value: 'BZ', flag: 'ğŸ‡§ğŸ‡¿', dialCode: '+501' },
  { label: 'Benin', value: 'BJ', flag: 'ğŸ‡§ğŸ‡¯', dialCode: '+229' },
  { label: 'Bhutan', value: 'BT', flag: 'ğŸ‡§ğŸ‡¹', dialCode: '+975' },
  { label: 'Bolivia', value: 'BO', flag: 'ğŸ‡§ğŸ‡´', dialCode: '+591' },
  {
    label: 'Bosnia and Herzegovina',
    value: 'BA',
    flag: 'ğŸ‡§ğŸ‡¦',
    dialCode: '+387',
  },
  { label: 'Botswana', value: 'BW', flag: 'ğŸ‡§ğŸ‡¼', dialCode: '+267' },
  { label: 'Brazil', value: 'BR', flag: 'ğŸ‡§ğŸ‡·', dialCode: '+55' },
  { label: 'Brunei', value: 'BN', flag: 'ğŸ‡§ğŸ‡³', dialCode: '+673' },
  { label: 'Bulgaria', value: 'BG', flag: 'ğŸ‡§ğŸ‡¬', dialCode: '+359' },
  { label: 'Burkina Faso', value: 'BF', flag: 'ğŸ‡§ğŸ‡«', dialCode: '+226' },
  { label: 'Burundi', value: 'BI', flag: 'ğŸ‡§ğŸ‡®', dialCode: '+257' },
  { label: 'Cabo Verde', value: 'CV', flag: 'ğŸ‡¨ğŸ‡»', dialCode: '+238' },
  { label: 'Cambodia', value: 'KH', flag: 'ğŸ‡°ğŸ‡­', dialCode: '+855' },
  { label: 'Cameroon', value: 'CM', flag: 'ğŸ‡¨ğŸ‡²', dialCode: '+237' },
  { label: 'Canada', value: 'CA', flag: 'ğŸ‡¨ğŸ‡¦', dialCode: '+1' },
  {
    label: 'Central African Republic',
    value: 'CF',
    flag: 'ğŸ‡¨ğŸ‡«',
    dialCode: '+236',
  },
  { label: 'Chad', value: 'TD', flag: 'ğŸ‡¹ğŸ‡©', dialCode: '+235' },
  { label: 'Chile', value: 'CL', flag: 'ğŸ‡¨ğŸ‡±', dialCode: '+56' },
  { label: 'China', value: 'CN', flag: 'ğŸ‡¨ğŸ‡³', dialCode: '+86' },
  { label: 'Colombia', value: 'CO', flag: 'ğŸ‡¨ğŸ‡´', dialCode: '+57' },
  { label: 'Comoros', value: 'KM', flag: 'ğŸ‡°ğŸ‡²', dialCode: '+269' },
  { label: 'Congo', value: 'CG', flag: 'ğŸ‡¨ğŸ‡¬', dialCode: '+242' },
  { label: 'Costa Rica', value: 'CR', flag: 'ğŸ‡¨ğŸ‡·', dialCode: '+506' },
  { label: 'Croatia', value: 'HR', flag: 'ğŸ‡­ğŸ‡·', dialCode: '+385' },
  { label: 'Cuba', value: 'CU', flag: 'ğŸ‡¨ğŸ‡º', dialCode: '+53' },
  { label: 'Cyprus', value: 'CY', flag: 'ğŸ‡¨ğŸ‡¾', dialCode: '+357' },
  { label: 'Czech Republic', value: 'CZ', flag: 'ğŸ‡¨ğŸ‡¿', dialCode: '+420' },
  { label: 'Denmark', value: 'DK', flag: 'ğŸ‡©ğŸ‡°', dialCode: '+45' },
  { label: 'Djibouti', value: 'DJ', flag: 'ğŸ‡©ğŸ‡¯', dialCode: '+253' },
  { label: 'Dominica', value: 'DM', flag: 'ğŸ‡©ğŸ‡²', dialCode: '+1' },
  { label: 'Dominican Republic', value: 'DO', flag: 'ğŸ‡©ğŸ‡´', dialCode: '+1' },
  { label: 'Ecuador', value: 'EC', flag: 'ğŸ‡ªğŸ‡¨', dialCode: '+593' },
  { label: 'Egypt', value: 'EG', flag: 'ğŸ‡ªğŸ‡¬', dialCode: '+20' },
  { label: 'El Salvador', value: 'SV', flag: 'ğŸ‡¸ğŸ‡»', dialCode: '+503' },
  { label: 'Equatorial Guinea', value: 'GQ', flag: 'ğŸ‡¬ğŸ‡¶', dialCode: '+240' },
  { label: 'Eritrea', value: 'ER', flag: 'ğŸ‡ªğŸ‡·', dialCode: '+291' },
  { label: 'Estonia', value: 'EE', flag: 'ğŸ‡ªğŸ‡ª', dialCode: '+372' },
  { label: 'Eswatini', value: 'SZ', flag: 'ğŸ‡¸ğŸ‡¿', dialCode: '+268' },
  { label: 'Ethiopia', value: 'ET', flag: 'ğŸ‡ªğŸ‡¹', dialCode: '+251' },
  { label: 'Fiji', value: 'FJ', flag: 'ğŸ‡«ğŸ‡¯', dialCode: '+679' },
  { label: 'Finland', value: 'FI', flag: 'ğŸ‡«ğŸ‡®', dialCode: '+358' },
  { label: 'France', value: 'FR', flag: 'ğŸ‡«ğŸ‡·', dialCode: '+33' },
  { label: 'Gabon', value: 'GA', flag: 'ğŸ‡¬ğŸ‡¦', dialCode: '+241' },
  { label: 'Gambia', value: 'GM', flag: 'ğŸ‡¬ğŸ‡²', dialCode: '+220' },
  { label: 'Georgia', value: 'GE', flag: 'ğŸ‡¬ğŸ‡ª', dialCode: '+995' },
  { label: 'Germany', value: 'DE', flag: 'ğŸ‡©ğŸ‡ª', dialCode: '+49' },
  { label: 'Ghana', value: 'GH', flag: 'ğŸ‡¬ğŸ‡­', dialCode: '+233' },
  { label: 'Greece', value: 'GR', flag: 'ğŸ‡¬ğŸ‡·', dialCode: '+30' },
  { label: 'Grenada', value: 'GD', flag: 'ğŸ‡¬ğŸ‡©', dialCode: '+1' },
  { label: 'Guatemala', value: 'GT', flag: 'ğŸ‡¬ğŸ‡¹', dialCode: '+502' },
  { label: 'Guinea', value: 'GN', flag: 'ğŸ‡¬ğŸ‡³', dialCode: '+224' },
  { label: 'Guinea-Bissau', value: 'GW', flag: 'ğŸ‡¬ğŸ‡¼', dialCode: '+245' },
  { label: 'Guyana', value: 'GY', flag: 'ğŸ‡¬ğŸ‡¾', dialCode: '+592' },
  { label: 'Haiti', value: 'HT', flag: 'ğŸ‡­ğŸ‡¹', dialCode: '+509' },
  { label: 'Honduras', value: 'HN', flag: 'ğŸ‡­ğŸ‡³', dialCode: '+504' },
  { label: 'Hungary', value: 'HU', flag: 'ğŸ‡­ğŸ‡º', dialCode: '+36' },
  { label: 'Iceland', value: 'IS', flag: 'ğŸ‡®ğŸ‡¸', dialCode: '+354' },
  { label: 'India', value: 'IN', flag: 'ğŸ‡®ğŸ‡³', dialCode: '+91' },
  { label: 'Indonesia', value: 'ID', flag: 'ğŸ‡®ğŸ‡©', dialCode: '+62' },
  { label: 'Iran', value: 'IR', flag: 'ğŸ‡®ğŸ‡·', dialCode: '+98' },
  { label: 'Iraq', value: 'IQ', flag: 'ğŸ‡®ğŸ‡¶', dialCode: '+964' },
  { label: 'Ireland', value: 'IE', flag: 'ğŸ‡®ğŸ‡ª', dialCode: '+353' },
  { label: 'Israel', value: 'IL', flag: 'ğŸ‡®ğŸ‡±', dialCode: '+972' },
  { label: 'Italy', value: 'IT', flag: 'ğŸ‡®ğŸ‡¹', dialCode: '+39' },
  { label: 'Jamaica', value: 'JM', flag: 'ğŸ‡¯ğŸ‡²', dialCode: '+1' },
  { label: 'Japan', value: 'JP', flag: 'ğŸ‡¯ğŸ‡µ', dialCode: '+81' },
  { label: 'Jordan', value: 'JO', flag: 'ğŸ‡¯ğŸ‡´', dialCode: '+962' },
  { label: 'Kazakhstan', value: 'KZ', flag: 'ğŸ‡°ğŸ‡¿', dialCode: '+7' },
  { label: 'Kenya', value: 'KE', flag: 'ğŸ‡°ğŸ‡ª', dialCode: '+254' },
  { label: 'Kiribati', value: 'KI', flag: 'ğŸ‡°ğŸ‡®', dialCode: '+686' },
  { label: 'Korea, North', value: 'KP', flag: 'ğŸ‡°ğŸ‡µ', dialCode: '+850' },
  { label: 'Korea, South', value: 'KR', flag: 'ğŸ‡°ğŸ‡·', dialCode: '+82' },
  { label: 'Kuwait', value: 'KW', flag: 'ğŸ‡°ğŸ‡¼', dialCode: '+965' },
  { label: 'Kyrgyzstan', value: 'KG', flag: 'ğŸ‡°ğŸ‡¬', dialCode: '+996' },
  { label: 'Laos', value: 'LA', flag: 'ğŸ‡±ğŸ‡¦', dialCode: '+856' },
  { label: 'Latvia', value: 'LV', flag: 'ğŸ‡±ğŸ‡»', dialCode: '+371' },
  { label: 'Lebanon', value: 'LB', flag: 'ğŸ‡±ğŸ‡§', dialCode: '+961' },
  { label: 'Lesotho', value: 'LS', flag: 'ğŸ‡±ğŸ‡¸', dialCode: '+266' },
  { label: 'Liberia', value: 'LR', flag: 'ğŸ‡±ğŸ‡·', dialCode: '+231' },
  { label: 'Libya', value: 'LY', flag: 'ğŸ‡±ğŸ‡¾', dialCode: '+218' },
  { label: 'Liechtenstein', value: 'LI', flag: 'ğŸ‡±ğŸ‡®', dialCode: '+423' },
  { label: 'Lithuania', value: 'LT', flag: 'ğŸ‡±ğŸ‡¹', dialCode: '+370' },
  { label: 'Luxembourg', value: 'LU', flag: 'ğŸ‡±ğŸ‡º', dialCode: '+352' },
  { label: 'Madagascar', value: 'MG', flag: 'ğŸ‡²ğŸ‡¬', dialCode: '+261' },
  { label: 'Malawi', value: 'MW', flag: 'ğŸ‡²ğŸ‡¼', dialCode: '+265' },
  { label: 'Malaysia', value: 'MY', flag: 'ğŸ‡²ğŸ‡¾', dialCode: '+60' },
  { label: 'Maldives', value: 'MV', flag: 'ğŸ‡²ğŸ‡»', dialCode: '+960' },
  { label: 'Mali', value: 'ML', flag: 'ğŸ‡²ğŸ‡±', dialCode: '+223' },
  { label: 'Malta', value: 'MT', flag: 'ğŸ‡²ğŸ‡¹', dialCode: '+356' },
  { label: 'Marshall Islands', value: 'MH', flag: 'ğŸ‡²ğŸ‡­', dialCode: '+692' },
  { label: 'Mauritania', value: 'MR', flag: 'ğŸ‡²ğŸ‡·', dialCode: '+222' },
  { label: 'Mauritius', value: 'MU', flag: 'ğŸ‡²ğŸ‡º', dialCode: '+230' },
  { label: 'Mexico', value: 'MX', flag: 'ğŸ‡²ğŸ‡½', dialCode: '+52' },
  { label: 'Micronesia', value: 'FM', flag: 'ğŸ‡«ğŸ‡²', dialCode: '+691' },
  { label: 'Moldova', value: 'MD', flag: 'ğŸ‡²ğŸ‡©', dialCode: '+373' },
  { label: 'Monaco', value: 'MC', flag: 'ğŸ‡²ğŸ‡¨', dialCode: '+377' },
  { label: 'Mongolia', value: 'MN', flag: 'ğŸ‡²ğŸ‡³', dialCode: '+976' },
  { label: 'Montenegro', value: 'ME', flag: 'ğŸ‡²ğŸ‡ª', dialCode: '+382' },
  { label: 'Morocco', value: 'MA', flag: 'ğŸ‡²ğŸ‡¦', dialCode: '+212' },
  { label: 'Mozambique', value: 'MZ', flag: 'ğŸ‡²ğŸ‡¿', dialCode: '+258' },
  { label: 'Myanmar', value: 'MM', flag: 'ğŸ‡²ğŸ‡²', dialCode: '+95' },
  { label: 'Namibia', value: 'NA', flag: 'ğŸ‡³ğŸ‡¦', dialCode: '+264' },
  { label: 'Nauru', value: 'NR', flag: 'ğŸ‡³ğŸ‡·', dialCode: '+674' },
  { label: 'Nepal', value: 'NP', flag: 'ğŸ‡³ğŸ‡µ', dialCode: '+977' },
  { label: 'Netherlands', value: 'NL', flag: 'ğŸ‡³ğŸ‡±', dialCode: '+31' },
  { label: 'New Zealand', value: 'NZ', flag: 'ğŸ‡³ğŸ‡¿', dialCode: '+64' },
  { label: 'Nicaragua', value: 'NI', flag: 'ğŸ‡³ğŸ‡®', dialCode: '+505' },
  { label: 'Niger', value: 'NE', flag: 'ğŸ‡³ğŸ‡ª', dialCode: '+227' },
  { label: 'Nigeria', value: 'NG', flag: 'ğŸ‡³ğŸ‡¬', dialCode: '+234' },
  { label: 'North Macedonia', value: 'MK', flag: 'ğŸ‡²ğŸ‡°', dialCode: '+389' },
  { label: 'Norway', value: 'NO', flag: 'ğŸ‡³ğŸ‡´', dialCode: '+47' },
  { label: 'Oman', value: 'OM', flag: 'ğŸ‡´ğŸ‡²', dialCode: '+968' },
  { label: 'Pakistan', value: 'PK', flag: 'ğŸ‡µğŸ‡°', dialCode: '+92' },
  { label: 'Palau', value: 'PW', flag: 'ğŸ‡µğŸ‡¼', dialCode: '+680' },
  { label: 'Palestine', value: 'PS', flag: 'ğŸ‡µğŸ‡¸', dialCode: '+970' },
  { label: 'Panama', value: 'PA', flag: 'ğŸ‡µğŸ‡¦', dialCode: '+507' },
  { label: 'Papua New Guinea', value: 'PG', flag: 'ğŸ‡µğŸ‡¬', dialCode: '+675' },
  { label: 'Paraguay', value: 'PY', flag: 'ğŸ‡µğŸ‡¾', dialCode: '+595' },
  { label: 'Peru', value: 'PE', flag: 'ğŸ‡µğŸ‡ª', dialCode: '+51' },
  { label: 'Philippines', value: 'PH', flag: 'ğŸ‡µğŸ‡­', dialCode: '+63' },
  { label: 'Poland', value: 'PL', flag: 'ğŸ‡µğŸ‡±', dialCode: '+48' },
  { label: 'Portugal', value: 'PT', flag: 'ğŸ‡µğŸ‡¹', dialCode: '+351' },
  { label: 'Qatar', value: 'QA', flag: 'ğŸ‡¶ğŸ‡¦', dialCode: '+974' },
  { label: 'Romania', value: 'RO', flag: 'ğŸ‡·ğŸ‡´', dialCode: '+40' },
  { label: 'Russia', value: 'RU', flag: 'ğŸ‡·ğŸ‡º', dialCode: '+7' },
  { label: 'Rwanda', value: 'RW', flag: 'ğŸ‡·ğŸ‡¼', dialCode: '+250' },
  { label: 'Saint Kitts and Nevis', value: 'KN', flag: 'ğŸ‡°ğŸ‡³', dialCode: '+1' },
  { label: 'Saint Lucia', value: 'LC', flag: 'ğŸ‡±ğŸ‡¨', dialCode: '+1' },
  {
    label: 'Saint Vincent and the Grenadines',
    value: 'VC',
    flag: 'ğŸ‡»ğŸ‡¨',
    dialCode: '+1',
  },
  { label: 'Samoa', value: 'WS', flag: 'ğŸ‡¼ğŸ‡¸', dialCode: '+685' },
  { label: 'San Marino', value: 'SM', flag: 'ğŸ‡¸ğŸ‡²', dialCode: '+378' },
  { label: 'Sao Tome and Principe', value: 'ST', flag: 'ğŸ‡¸ğŸ‡¹', dialCode: '+239' },
  { label: 'Saudi Arabia', value: 'SA', flag: 'ğŸ‡¸ğŸ‡¦', dialCode: '+966' },
  { label: 'Senegal', value: 'SN', flag: 'ğŸ‡¸ğŸ‡³', dialCode: '+221' },
  { label: 'Serbia', value: 'RS', flag: 'ğŸ‡·ğŸ‡¸', dialCode: '+381' },
  { label: 'Seychelles', value: 'SC', flag: 'ğŸ‡¸ğŸ‡¨', dialCode: '+248' },
  { label: 'Sierra Leone', value: 'SL', flag: 'ğŸ‡¸ğŸ‡±', dialCode: '+232' },
  { label: 'Singapore', value: 'SG', flag: 'ğŸ‡¸ğŸ‡¬', dialCode: '+65' },
  { label: 'Slovakia', value: 'SK', flag: 'ğŸ‡¸ğŸ‡°', dialCode: '+421' },
  { label: 'Slovenia', value: 'SI', flag: 'ğŸ‡¸ğŸ‡®', dialCode: '+386' },
  { label: 'Solomon Islands', value: 'SB', flag: 'ğŸ‡¸ğŸ‡§', dialCode: '+677' },
  { label: 'Somalia', value: 'SO', flag: 'ğŸ‡¸ğŸ‡´', dialCode: '+252' },
  { label: 'South Africa', value: 'ZA', flag: 'ğŸ‡¿ğŸ‡¦', dialCode: '+27' },
  { label: 'South Sudan', value: 'SS', flag: 'ğŸ‡¸ğŸ‡¸', dialCode: '+211' },
  { label: 'Spain', value: 'ES', flag: 'ğŸ‡ªğŸ‡¸', dialCode: '+34' },
  { label: 'Sri Lanka', value: 'LK', flag: 'ğŸ‡±ğŸ‡°', dialCode: '+94' },
  { label: 'Sudan', value: 'SD', flag: 'ğŸ‡¸ğŸ‡©', dialCode: '+249' },
  { label: 'Suriname', value: 'SR', flag: 'ğŸ‡¸ğŸ‡·', dialCode: '+597' },
  { label: 'Sweden', value: 'SE', flag: 'ğŸ‡¸ğŸ‡ª', dialCode: '+46' },
  { label: 'Switzerland', value: 'CH', flag: 'ğŸ‡¨ğŸ‡­', dialCode: '+41' },
  { label: 'Syria', value: 'SY', flag: 'ğŸ‡¸ğŸ‡¾', dialCode: '+963' },
  { label: 'Taiwan', value: 'TW', flag: 'ğŸ‡¹ğŸ‡¼', dialCode: '+886' },
  { label: 'Tajikistan', value: 'TJ', flag: 'ğŸ‡¹ğŸ‡¯', dialCode: '+992' },
  { label: 'Tanzania', value: 'TZ', flag: 'ğŸ‡¹ğŸ‡¿', dialCode: '+255' },
  { label: 'Thailand', value: 'TH', flag: 'ğŸ‡¹ğŸ‡­', dialCode: '+66' },
  { label: 'Timor-Leste', value: 'TL', flag: 'ğŸ‡¹ğŸ‡±', dialCode: '+670' },
  { label: 'Togo', value: 'TG', flag: 'ğŸ‡¹ğŸ‡¬', dialCode: '+228' },
  { label: 'Tonga', value: 'TO', flag: 'ğŸ‡¹ğŸ‡´', dialCode: '+676' },
  { label: 'Trinidad and Tobago', value: 'TT', flag: 'ğŸ‡¹ğŸ‡¹', dialCode: '+1' },
  { label: 'Tunisia', value: 'TN', flag: 'ğŸ‡¹ğŸ‡³', dialCode: '+216' },
  { label: 'Turkey', value: 'TR', flag: 'ğŸ‡¹ğŸ‡·', dialCode: '+90' },
  { label: 'Turkmenistan', value: 'TM', flag: 'ğŸ‡¹ğŸ‡²', dialCode: '+993' },
  { label: 'Tuvalu', value: 'TV', flag: 'ğŸ‡¹ğŸ‡»', dialCode: '+688' },
  { label: 'Uganda', value: 'UG', flag: 'ğŸ‡ºğŸ‡¬', dialCode: '+256' },
  { label: 'Ukraine', value: 'UA', flag: 'ğŸ‡ºğŸ‡¦', dialCode: '+380' },
  { label: 'United Arab Emirates', value: 'AE', flag: 'ğŸ‡¦ğŸ‡ª', dialCode: '+971' },
  { label: 'United Kingdom', value: 'GB', flag: 'ğŸ‡¬ğŸ‡§', dialCode: '+44' },
  { label: 'United States', value: 'US', flag: 'ğŸ‡ºğŸ‡¸', dialCode: '+1' },
  { label: 'Uruguay', value: 'UY', flag: 'ğŸ‡ºğŸ‡¾', dialCode: '+598' },
  { label: 'Uzbekistan', value: 'UZ', flag: 'ğŸ‡ºğŸ‡¿', dialCode: '+998' },
  { label: 'Vanuatu', value: 'VU', flag: 'ğŸ‡»ğŸ‡º', dialCode: '+678' },
  { label: 'Vatican City', value: 'VA', flag: 'ğŸ‡»ğŸ‡¦', dialCode: '+39' },
  { label: 'Venezuela', value: 'VE', flag: 'ğŸ‡»ğŸ‡ª', dialCode: '+58' },
  { label: 'Vietnam', value: 'VN', flag: 'ğŸ‡»ğŸ‡³', dialCode: '+84' },
  { label: 'Yemen', value: 'YE', flag: 'ğŸ‡¾ğŸ‡ª', dialCode: '+967' },
  { label: 'Zambia', value: 'ZM', flag: 'ğŸ‡¿ğŸ‡²', dialCode: '+260' },
  { label: 'Zimbabwe', value: 'ZW', flag: 'ğŸ‡¿ğŸ‡¼', dialCode: '+263' },
];

interface PhoneInputProps {
  value: string;
  onChange: (value: string) => void;
  placeholder?: string;
  defaultCountry?: string;
}

const PhoneInput: React.FC<PhoneInputProps> = ({
  value = '',
  onChange,
  placeholder = 'Enter your phone number',
  defaultCountry = 'US',
}) => {
  const isMobile = useIsMobile();
  const [open, setOpen] = useState(false);
  const [selectedCountry, setSelectedCountry] = useState<
    (typeof countriesWithDialCodes)[0] | null
  >(null);
  const [phoneNumber, setPhoneNumber] = useState('');

  // Parse value to extract country code and phone number on component mount or when value changes externally
  useEffect(() => {
    // If we don't have a value yet, set the default country
    if (!value && !selectedCountry) {
      const defaultCountryOption = countriesWithDialCodes.find(
        (c) => c.value === defaultCountry,
      );
      if (defaultCountryOption) {
        setSelectedCountry(defaultCountryOption);
        // Just set the dial code without updating the form value yet
        setPhoneNumber('');
      }
    } else if (value && !selectedCountry) {
      // Try to detect country from the value if it has a + prefix
      if (value.startsWith('+')) {
        // Find the longest matching dial code
        let matchedCountry = null;
        let maxLength = 0;

        for (const country of countriesWithDialCodes) {
          const dialCode = country.dialCode;
          if (value.startsWith(dialCode) && dialCode.length > maxLength) {
            matchedCountry = country;
            maxLength = dialCode.length;
          }
        }

        if (matchedCountry) {
          setSelectedCountry(matchedCountry);
          setPhoneNumber(value.slice(matchedCountry.dialCode.length).trim());
        } else {
          // No match found, just use the default country
          const defaultCountryOption = countriesWithDialCodes.find(
            (c) => c.value === defaultCountry,
          );
          if (defaultCountryOption) {
            setSelectedCountry(defaultCountryOption);
            setPhoneNumber(value);
          }
        }
      } else {
        // If no + prefix, just use the default country and keep the entire value as phone
        const defaultCountryOption = countriesWithDialCodes.find(
          (c) => c.value === defaultCountry,
        );
        if (defaultCountryOption) {
          setSelectedCountry(defaultCountryOption);
          setPhoneNumber(value);
        }
      }
    }
  }, [value, defaultCountry, selectedCountry]);

  // When the user selects a country from the dropdown
  const handleCountrySelect = (country: (typeof countriesWithDialCodes)[0]) => {
    setSelectedCountry(country);
    setOpen(false);

    // Update the form with the new value
    const newValue = `${country.dialCode} ${phoneNumber}`.trim();
    onChange(newValue);
  };

  // When the user types in the phone input
  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newPhoneNumber = e.target.value;
    setPhoneNumber(newPhoneNumber);

    // Only update the form value if we have a selected country
    if (selectedCountry) {
      const newValue = `${selectedCountry.dialCode} ${newPhoneNumber}`.trim();
      onChange(newValue);
    } else {
      onChange(newPhoneNumber);
    }
  };

  return (
    <div className="flex">
      <Popover open={open} onOpenChange={setOpen}>
        <PopoverTrigger asChild>
          <Button
            type="button"
            variant="outline"
            className={cn(
              'flex-shrink-0 px-2 md:px-3 border-r-0 rounded-r-none focus-visible:ring-offset-0 border-r-transparent',
              isMobile ? 'h-12 text-base' : 'h-10 text-sm',
            )}
          >
            <div className="flex items-center gap-1 md:gap-2">
              {selectedCountry ? (
                <>
                  <span className="text-base">{selectedCountry.flag}</span>
                  <span className="hidden md:inline">
                    {selectedCountry.dialCode}
                  </span>
                  <ChevronDown className="h-4 w-4 opacity-50" />
                </>
              ) : (
                <>
                  <Phone className="h-4 w-4" />
                  <ChevronDown className="h-4 w-4 opacity-50" />
                </>
              )}
            </div>
          </Button>
        </PopoverTrigger>
        <PopoverContent align="start" className="w-[240px] p-0">
          <Command>
            <CommandInput placeholder="Search country..." />
            <CommandList>
              <CommandEmpty>No country found.</CommandEmpty>
              <CommandGroup>
                {countriesWithDialCodes.map((country) => (
                  <CommandItem
                    key={country.value}
                    value={country.label}
                    onSelect={() => handleCountrySelect(country)}
                  >
                    <div className="flex items-center">
                      <span className="mr-2">{country.flag}</span>
                      <span className="flex-1 truncate">{country.label}</span>
                      <span className="text-muted-foreground text-xs">
                        {country.dialCode}
                      </span>
                    </div>
                    <Check
                      className={cn(
                        'ml-2 h-4 w-4',
                        selectedCountry?.value === country.value
                          ? 'opacity-100'
                          : 'opacity-0',
                      )}
                    />
                  </CommandItem>
                ))}
              </CommandGroup>
            </CommandList>
          </Command>
        </PopoverContent>
      </Popover>

      <Input
        type="tel"
        value={phoneNumber}
        onChange={handlePhoneChange}
        className={cn(
          'rounded-l-none',
          isMobile ? 'h-12 py-3 text-base' : 'h-10 py-2 text-sm',
        )}
        placeholder={placeholder}
      />
    </div>
  );
};

export default PhoneInput;
